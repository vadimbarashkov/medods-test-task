openapi: 3.0.3
info:
  title: Auth API
  description: JWT-based RESTful Authentication API.
  contact:
    name: Vadim Barashkov
    email: vadimdominik2005@gmail.com
  license:
    name: WTFPL
    url: https://www.wtfpl.net
  version: 1.0.0

servers:
  - url: /api/v1

paths:
  /healthz:
    get:
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: ok

  /auth/tokens:
    post:
      summary: Issue access and refresh tokens
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the user
      responses:
        "200":
          description: Tokens issued successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokensResponse"
        "400":
          description: Missing or invalid user_id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/tokens/refresh:
    post:
      summary: Refresh access and refresh tokens
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Tokens refreshed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokensResponse"
        "401":
          description: Invalid or missing refresh token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    TokensResponse:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        refresh_token:
          type: string
          example: dGVzdC1yZWZyZXNoLXRva2Vu...
      required:
        - access_token
        - refresh_token

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: invalid user_id query param
      required:
        - error
